package test0409;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class test0409_01 {

	public static void main(String[] args) {

		List<mockData> mockDataList = makeMockData();
		
		// TODO
		String excelFilePath = "C:\\Users\\INNOX-002\\Desktop\\shao\\forEclipse\\workspace\\test.xlsx";
		 
        try (FileInputStream fileInputStream = new FileInputStream(new File(excelFilePath));
        	XSSFWorkbook workbook = new XSSFWorkbook(fileInputStream)) {
 
            // 获取第一个工作表
            XSSFSheet sheet = workbook.getSheetAt(0);
 
            int colIndex = 0;
            
            for (mockData mockData : mockDataList) {
            	string writeTime = mockData.getWriteTime();
            }
            
            // 遍历行
            for (Row row : sheet) {
            	Cell cell = row.getCell(colIndex);
            	
            	if (cell != null) {
            		// 获取单元格数据
//                    String cellValue = String.valueOf(cell.getNumericCellValue());
            		cell.setCellType(CellType.STRING);
            		
                    String cellValue = cell.getStringCellValue();
                    System.out.println(cellValue);
            	}
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
	}
	
	static List<mockData> makeMockData() {
		List<mockData> mockDataList = new ArrayList<mockData>();

		mockData mockData1 = new mockData(true, "2024/4/1", "morningFD1", 501, "1", "2", true, "memotest",
				"incomeName1", 900, "1");
		mockData mockData2 = new mockData(false, "2024/4/1", "morningFD2", 502, "1", "2", true, "memotest",
				"incomeName1", 900, "1");
		mockData mockData3 = new mockData(true, "2024/4/1", "morningFD3", 503, "1", "2", false, "memotest",
				"incomeName1", 900, "1");
		mockData mockData4 = new mockData(true, "2024/4/1", "morningFD4", 504, "1", "2", true, "memotest",
				"incomeName1", 900, "1");

		mockDataList.add(mockData1);
		mockDataList.add(mockData2);
		mockDataList.add(mockData3);
		mockDataList.add(mockData4);

		return mockDataList;
	}

}
