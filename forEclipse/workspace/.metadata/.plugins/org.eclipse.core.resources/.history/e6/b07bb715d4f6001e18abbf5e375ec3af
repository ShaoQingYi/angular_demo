package test0409;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class test0409_01 {

	/* 1.计算日本支出条数和国内支出条数（取大的一个作为插入行数）
	 * 2.遍历指定日期所有对象
	 * 3.找到对应日期起始行
	 * 4.插入上面1计算出的应插条数
	 * 5.支出的场合
	 * 	   日本支出的场合 costType in {1.日本现金 2.JCB信用卡}
	 * 		 costName  → [B] + RowIndex
	 * 		 costMoney → [C] + RowIndex
	 * 		 costType  → [D] + RowIndex
	 * 	   国内支出的场合 costType in {3.国内信用卡1 4.国内信用卡2 5.花呗白条等}
	 *       costName  → [K] + RowIndex
	 * 		 costMoney → [L] + RowIndex
	 *   收入的场合
	 * 
	 * 
	 * 
	 */
	public static void main(String[] args) {

		List<mockData> mockDataList = makeMockData();
		
		// TODO
		String excelFilePath = "C:\\Users\\INNOX-002\\Desktop\\shao\\forEclipse\\workspace\\test.xlsx";
		 
        try (FileInputStream fileInputStream = new FileInputStream(new File(excelFilePath));
        	XSSFWorkbook workbook = new XSSFWorkbook(fileInputStream)) {
 
            // 获取第一个工作表
            XSSFSheet sheet = workbook.getSheetAt(0);
 
            int colIndex = 0;
            
            int startWriteRowIndex = 0;
            int insertRowIndex = 0;
            int insertRowCounts = 0;
            
            int inOrOut_in_count = (int)mockDataList.stream().filter(obj -> obj.getCostMoney() != 0).count();
            int inOrOut_out_count = (int)mockDataList.stream().filter(obj -> obj.getIncomeMoney() != 0).count();
            
			insertRowCounts = inOrOut_in_count > inOrOut_out_count ? inOrOut_in_count : inOrOut_out_count;
            
            for (mockData mockData : mockDataList) {
            	String writeTime = mockData.getWriteTime();
            	
            	// 遍历行
                for (Row row : sheet) {
                	Cell cell = row.getCell(colIndex);
                	
                	if (cell != null) {
                		// 获取单元格数据
//                        String cellValue = String.valueOf(cell.getNumericCellValue());
                		cell.setCellType(CellType.STRING);
                		
                        String cellValue = cell.getStringCellValue();
                        
                        // 记录对象匹配excel日期第一条
                        if (writeTime.equals(cellValue)) {
                        	startWriteRowIndex = row.getRowNum();
                        	break;
                        }
                	}
                }
                
                
                
                System.out.println(startWriteRowIndex);
            }    
        } catch (IOException e) {
            e.printStackTrace();
        }
	}
	
	static List<mockData> makeMockData() {
		List<mockData> mockDataList = new ArrayList<mockData>();

		mockData mockData1 = new mockData(true, "2024/4/1", "morningFD1", 501, "1", "2", true, "memotest",
				"incomeName1", 900, "1");
		mockData mockData2 = new mockData(false, "2024/4/1", "morningFD2", 502, "1", "2", true, "memotest",
				"incomeName1", 900, "1");
		mockData mockData3 = new mockData(true, "2024/4/1", "morningFD3", 503, "1", "2", false, "memotest",
				"incomeName1", 900, "1");
		mockData mockData4 = new mockData(true, "2024/4/1", "morningFD4", 504, "1", "2", true, "memotest",
				"incomeName1", 900, "1");

		mockDataList.add(mockData1);
		mockDataList.add(mockData2);
		mockDataList.add(mockData3);
		mockDataList.add(mockData4);

		return mockDataList;
	}

}
